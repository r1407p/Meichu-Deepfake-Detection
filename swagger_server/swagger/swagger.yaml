openapi: 3.0.3
info:
  title: Spoof Detect System Specifications Description
  description: |
    The main API is called spoof_detector. You can input an audio data to detect its authenticity.
  version: 1.0.0
servers:
- url: /
security:
- jwt: []
paths:
  /auth/{user_id}:
    get:
      tags:
      - security
      summary: Return JWT token
      operationId: main_generate_token
      parameters:
      - name: user_id
        in: path
        description: User unique identifier
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 12
      responses:
        "200":
          description: JWT token
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "401":
          description: Access token is missing or invalid
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "403":
          description: No permissions to access it
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
      x-openapi-router-controller: swagger_server.controllers.security_controller
  /spoof_detector: ##
    post:
      tags:
      - analyze_tool
      summary: detect events from audio data
      operationId: spoof_detector
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/spoof_detector_body'
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200_response'
        "400":
          description: input error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400_error_response'
        "401":
          description: Access token is missing or invalid
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/401_error_response'
        "403":
          description: No permissions to access it
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/403_error_response'
        "500":
          description: internal server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/500_error_response'
      security:
      - jwt: []
      x-openapi-router-controller: swagger_server.controllers.analyze_tool_controller
components:
  schemas:
    cmpnt_processing_time:
      required:
      - duration_in_s
      - end_time
      - start_time
      type: object
      properties:
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        duration_in_s:
          type: number
          format: float
          example: 1.5
      example:
        start_time: 2000-01-23T04:56:07.000+00:00
        end_time: 2000-01-23T04:56:07.000+00:00
        duration_in_s: 1.5
    "200_response":
      type: object
      properties:
        reference_id:
          type: string
          example: REF00000001
        uid:
          type: string
          example: 20210827142959-42f091f4
        status_code:
          type: integer
          format: int64
          example: 200
        processing_time:
          $ref: '#/components/schemas/cmpnt_processing_time'
        result:
          type: string
          example: real
        confidence:
          type: number
          format: float
          example: 0.85
      example:
        result: real
        uid: 20210827142959-42f091f4
        processing_time:
          start_time: 2000-01-23T04:56:07.000+00:00
          end_time: 2000-01-23T04:56:07.000+00:00
          duration_in_s: 1.5
        status_code: 200
        reference_id: REF00000001
        confidence: 0.85
    "400_error_response":
      type: object
      properties:
        reference_id:
          type: string
          example: REF00000001
        uid:
          type: string
          example: 20210827142959-42f091f4
        status_code:
          type: integer
          format: int64
        processing_time:
          $ref: '#/components/schemas/cmpnt_processing_time'
        error_message:
          type: string
          example: input error
    "401_error_response":
      type: object
      properties:
        reference_id:
          type: string
          example: REF00000001
        uid:
          type: string
          example: 20210827142959-42f091f4
        status_code:
          type: integer
          format: int64
        processing_time:
          $ref: '#/components/schemas/cmpnt_processing_time'
        error_message:
          type: string
          example: invalid token
    "403_error_response":
      type: object
      properties:
        reference_id:
          type: string
          example: REF00000001
        uid:
          type: string
          example: 20210827142959-42f091f4
        status_code:
          type: integer
          format: int64
        processing_time:
          $ref: '#/components/schemas/cmpnt_processing_time'
        error_message:
          type: string
          example: permission denied
    "500_error_response":
      type: object
      properties:
        reference_id:
          type: string
          example: REF00000001
        uid:
          type: string
          example: 20210827142959-42f091f4
        status_code:
          type: integer
          format: int64
        processing_time:
          $ref: '#/components/schemas/cmpnt_processing_time'
        error_message:
          type: string
          example: internal server error
    spoof_detector_body:
      required:
      - audio_data
      - model_version
      - reference_id
      type: object
      properties:
        reference_id:
          type: string
          example: REF00000001
        audio_data:
          type: string
          example: UklGRgL7AABXQVZFZm10IBAAAAABAAEA
        model_version:
          type: string
          example: v0
  parameters:
    authorization:
      name: token
      in: header
      description: an authorization header
      required: true
      style: simple
      explode: false
      schema:
        type: string
  securitySchemes:
    jwt:
      type: http
      scheme: bearer
      bearerFormat: JWT
      x-bearerInfoFunc: swagger_server.controllers.authorization_controller.check_jwt

